class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int maxSum = kadane(nums);        
        if (maxSum < 0) {
            return maxSum;
        }        
        int circularMaxSum = 0;
        int totalSum = 0;        
        for (int i = 0; i < nums.length; i++) {
            totalSum += nums[i];
            nums[i] = -nums[i];
        }    
        circularMaxSum = totalSum + kadane(nums);        
        return Math.max(maxSum, circularMaxSum);
    }

    private int kadane(int[] nums) {
        int maxSum = nums[0];
        int currentSum = nums[0];        
        for (int i = 1; i < nums.length; i++) {
            currentSum = Math.max(nums[i], currentSum + nums[i]);
            maxSum = Math.max(maxSum, currentSum);
        }    
        return maxSum;
    }
}
