/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        if(root == null) return list;
        dfs(root,"",list);
        return list;        
    }
    public void dfs(TreeNode root, String str, List<String>list){
        str += root.val;
        if(root.left == null && root.right == null){
            list.add(str);
        }
        if(root.left != null){
            dfs(root.left, str + "->",list);
        }
        if(root.right != null){
            dfs(root.right, str + "->",list);
        }
    }
}
